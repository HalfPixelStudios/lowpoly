struct MVP {
    mediump mat4 model;
    mediump mat4 view;
    mediump mat4 projection;
};

struct Material {
    mediump vec3 ambient;
    mediump sampler2D diffuse;
    mediump sampler2D specular;
};

#define MAX_DIRECTIONAL_LIGHTS 1
#define MAX_POINT_LIGHTS 1
#define MAX_SPOT_LIGHTS 1

struct DirectionalLight {
    mediump vec3 direction;
    mediump vec3 color;
    mediump float specularStrength; // brightness of specular
    mediump float specularShininess;  // shininess of specular (tendancy to bounce light)
};

struct PointLight {
    mediump vec3 position;
    mediump vec3 color;
    mediump float specularStrength; // brightness of specular
    mediump float specularShininess;  // shininess of specular (tendancy to bounce light)

    mediump float attenuationLinear; // linear term for point light attenuation
    mediump float attenuationQuadratic; //quadratic term for point light attenuation
};

struct SpotLight {
    mediump vec3 position;
    mediump vec3 direction;
    mediump vec3 color;
    mediump float specularStrength; // brightness of specular
    mediump float specularShininess;  // shininess of specular (tendancy to bounce light)

    mediump float attenuationLinear; // linear term for point light attenuation
    mediump float attenuationQuadratic; //quadratic term for point light attenuation

    mediump float innerCutoff; // pass this in as a cosine of an angle (less work for gpu)
    mediump float outerCutoff;
};

